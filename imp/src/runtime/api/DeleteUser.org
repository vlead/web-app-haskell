#+TITLE: Delete User Api

* Introduction


#+NAME: extns_and_imports
#+BEGIN_SRC haskell 
{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE TypeOperators #-}

module DeleteUser where

import Prelude ()
import Prelude.Compat

import Control.Monad.Except
import Control.Monad.Reader
import Data.Aeson.Compat
import Data.Aeson.Types
import Data.Attoparsec.ByteString
import Data.ByteString (ByteString)
import Data.List
import Data.Maybe
import Data.String.Conversions
import Network.HTTP.Media ((//), (/:))
import Network.Wai
import Network.Wai.Handler.Warp
import Servant
import System.Directory
import Text.Blaze
import Text.Blaze.Html.Renderer.Utf8
import qualified Data.Aeson.Parser
import qualified Text.Blaze.Html
import Servant.API

import Models
#+END_SRC
* REST

** API Design

  - URL :: /deleteUser
  - Method :: POST

  - Request Headers ::
    + Content-type: application/json
    + Cookie: "value"

  - Data Params :: 
    #+BEGIN_EXAMPLE
    {
    "data" : "<email of user to be deleted>"
    }
    #+END_EXAMPLE
       
  - Success Response ::
    + Code: 200

    + Content :: ID of User
      #+BEGIN_EXAMPLE
    {"name"  : <value>,
     "email" : <value>,
     "roles" : { "role" : "<value" }
    }
      #+END_EXAMPLE

  - Error Response ::
    + Code: 401 

    OR

    + Code: 400 Bad Request

    OR

    + Code: 500

  - Example ::
    #+BEGIN_EXAMPLE
    http://localhost:8000/deleteUser
    #+END_EXAMPLE

** Implementation

#+NAME: delete_user
#+BEGIN_SRC haskell

type DeleteUserApi = Header "Cookie" String :> "deleteUser" :> ReqBody '[JSON] UniqueUserData :> Post '[JSON] (Maybe (User))

#+END_SRC

* Tangling

#+BEGIN_SRC haskell :eval no :noweb yes :tangle DeleteUser.hs

<<extns_and_imports>>
<<delete_user>>

#+END_SRC
