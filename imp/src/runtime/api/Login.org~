#+TITLE: Login Api



* Language Extensions and Imports
  

#+NAME: extns_and_imports
#+BEGIN_SRC haskell 
{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE TypeOperators #-}

module Login where

import Prelude ()
import Prelude.Compat

import Control.Monad.Except
import Control.Monad.Reader
import Data.Aeson.Compat
import Data.Aeson.Types
import Data.Attoparsec.ByteString
import Data.ByteString (ByteString)
import Data.List
import Data.Maybe
import Data.String.Conversions
import Network.HTTP.Media ((//), (/:))
import Network.Wai
import Network.Wai.Handler.Warp
import Servant
import System.Directory
import Text.Blaze
import Text.Blaze.Html.Renderer.Utf8
import qualified Data.Aeson.Parser
import qualified Text.Blaze.Html
import Data.Text
import Servant.Api

import Models

import Servant.API
#+END_SRC

* REST


API to login to the application.
   
** API Design

  - URL :: /login
  - Method :: POST
              
  - Request Data Params ::
                   
     #+BEGIN_EXAMPLE
     {
        "userId" : "<value>",
        "email"  : "<value>",
        "roles"  : {
                    "role": "<value"
                   }
     }
     #+END_EXAMPLE		   
       
  - Success Response ::
    + Code: 200

    + Content :: Cookie - Id of Current Session
      #+BEGIN_EXAMPLE
    
         {
         "SessionId": 1
         }
 
      #+END_EXAMPLE

  - Error Response ::

    + Code: 400 Bad Request

    OR

    + Code: 500


  - Example ::
    #+BEGIN_EXAMPLE
    http://localhost:8000/login
    #+END_EXAMPLE

** Implementation

#+NAME: login
#+BEGIN_SRC haskell

type LoginApi = "login" :> ReqBody '[JSON] Session :> Post '[JSON] (Maybe (ResponseSessionId))

#+END_SRC

* Tangling 

#+BEGIN_SRC haskell :eval no :noweb yes :tangle Login.hs

<<extns_and_imports>>
<<login>>

#+END_SRC

