#+TITLE: Api Routes Not Protected By Auth


* Introduction 

Defining the portion of the Api that can be accessed without logging in to the
system.

* Language Extensions and Imports 

#+NAME: extns_and_imports
#+BEGIN_SRC haskell 
{-# LANGUAGE DataKinds #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ScopedTypeVariables #-}
{-# LANGUAGE TypeOperators #-}

module NonSecureApi where

import Prelude ()
import Prelude.Compat

import Control.Monad.Except
import Control.Monad.Reader
import Data.Aeson.Compat
import Data.Aeson.Types
import Data.Attoparsec.ByteString
import Data.ByteString (ByteString)
import Data.List
import Data.Maybe
import Data.String.Conversions
import Data.Time.Calendar
import GHC.Generics
import Lucid
import Network.HTTP.Media ((//), (/:))
import Network.Wai
import Network.Wai.Handler.Warp
import Servant
import System.Directory
import Text.Blaze
import Text.Blaze.Html.Renderer.Utf8
import qualified Data.Aeson.Parser
import qualified Text.Blaze.Html

import Data.Proxy
import Data.Text

import Database.Persist

import Models

import Servant.API
#+END_SRC
* REST

** =/index=

Returns index page and welcome message

#+NAME: index
#+BEGIN_SRC haskell

type IndexApi = "index" :> Get '[PlainText] Text

#+END_SRC

** =/login=

API to login to the application.
   
*** API Design

  - URL :: /login
  - Method :: POST
              
  - Request Data Params ::
                   
     #+BEGIN_EXAMPLE
     {
        "userId" : "<value>",
        "email"  : "<value>",
        "roles"  : {
                    "role": "<value"
                   }
     }
     #+END_EXAMPLE		   
       
  - Success Response ::
    + Code: 200

    + Content :: Cookie - Id of Current Session
      #+BEGIN_EXAMPLE
    
         {
         "SessionId": 1
         }
 
      #+END_EXAMPLE

  - Error Response ::

    + Code: 400 Bad Request

    OR

    + Code: 500


  - Example ::
    #+BEGIN_EXAMPLE
    http://localhost:8000/login
    #+END_EXAMPLE

*** Implementation

#+NAME: login
#+BEGIN_SRC haskell

type LoginApi = "login" :> ReqBody '[JSON] Session :> Post '[JSON] (Maybe (ResponseSessionId))

#+END_SRC

* Combined 

Combining the APIs into one type.
  
#+NAME: non_secure_routes
#+BEGIN_SRC haskell

type NonSecureRoutes = IndexApi :<|> LoginApi

#+END_SRC
* Tangling

#+BEGIN_SRC haskell :eval no :noweb yes :tangle NonSecureApi.hs 
<<extns_and_imports>>
<<index>>
<<login>>
<<non_secure_routes>>

#+END_SRC
