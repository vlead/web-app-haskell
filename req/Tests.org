#+TITLE: Test Cases For User Directory Application


* Test Success For All Routes
* Tests For User

** Uniqueness of User Email

To check that no two users can have the same email.

Test: add two users with the same email.

Result: application returns an error.

** User Only Maps To Associated Role

To check that user is only mapped to a role associated with the user.

Tests: 
        1) Login a =NonAdmin= user with =Admin= role
        2) Login an =Admin= user with =NonAdmin= role

Result:
        1) Application returns an error.
        2) Application returns an error.
           
* Tests Returning =403 PERMISSION DENIED=

** Only Admin User Can Create User

To check that only user logged-in with =Admin= role can add user.

Test: Logged-in user with =NonAdmin= role adds user.
 
** Only Admin User Can Delete User
** Only Admin User Can Update Name Of Another User

To test that only user logged in as =Admin= can update the name of another user.

Test: user logged-in as =NonAdmin= updates name of another user.
 
** Only Admin User Can Update Email Of Another User

To test that only user logged in as =Admin= can update the email of another
user.

Test: user logged in as =NonAdmin= updates email of another user.

** Only Admin User Can Update Role Of User

To test that only admin user can update role of user.

Test: user logged in as =NonAdmin= updates role of user.

** Only Admin User Can Delete Role Of User


To test that only admin user can delete role of user.

Test: user logged in as =NonAdmin= deletes role of user.

** Only Admin User Can View Details Of Another User

To test that only admin user can view the details of another user.

Test: user logged in as =NonAdmin= views the details of another user.


<insert NonAdmin test cases here>

* Tests Returning =401 UNAUTHORISED=

<tests for logged-in user>

* Login is Mandatory
* Single User With Multiple Sessions
* No Two Sessions Of User With Same Role
* Cannot Delete Self

* Features Checked For At Compile Time 

** Tests To Add User

*** Request With Wrong Type of Arguments 

** Tests To Delete User

*** Request with Wrong Argument Types

** Tests To Show Users

*** Request with wrong argument types
** Test Malformed Request Exception

Type-safe request.
** Test for class templates

Class templates not used.
** Tests For Session

*** Create Session raising an exception

Session creation (ie: =/login=) is type-safe in terms of both request and arguments.
*** Test Session With No Role

Session is type-safe input datatype- will automatically throw an exception.
